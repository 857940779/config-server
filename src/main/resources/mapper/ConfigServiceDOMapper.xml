<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.ConfigServiceDOMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.dbdo.ConfigServiceDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="VARCHAR" />
    <result column="environment" property="environment" jdbcType="TINYINT" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, name, ip, port, environment, service_name, creator, updator, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from config_service
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from config_service
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.springmvc.dbdo.ConfigServiceDO" >
    insert into config_service (id, name, ip, 
      port, environment, service_name, 
      creator, updator, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{port,jdbcType=VARCHAR}, #{environment,jdbcType=TINYINT}, #{serviceName,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{updator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.springmvc.dbdo.ConfigServiceDO" >
    insert into config_service
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="environment != null" >
        environment,
      </if>
      <if test="serviceName != null" >
        service_name,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=VARCHAR},
      </if>
      <if test="environment != null" >
        #{environment,jdbcType=TINYINT},
      </if>
      <if test="serviceName != null" >
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.dbdo.ConfigServiceDO" >
    update config_service
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=VARCHAR},
      </if>
      <if test="environment != null" >
        environment = #{environment,jdbcType=TINYINT},
      </if>
      <if test="serviceName != null" >
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.springmvc.dbdo.ConfigServiceDO" >
    update config_service
    set name = #{name,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=VARCHAR},
      environment = #{environment,jdbcType=TINYINT},
      service_name = #{serviceName,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      updator = #{updator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getServerByIPAndEnvirAndServiceName" parameterType="com.springmvc.dbdo.ConfigServiceDO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from config_service
    where ip = #{ip} and environment=#{environment} and service_name=#{serviceName}
  </select>
</mapper>